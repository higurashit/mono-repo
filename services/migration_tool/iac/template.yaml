AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Globals:
  Function:
    Runtime: python3.12
    Handler: app.handler
    Architectures:
      - x86_64
    Timeout: 30
    MemorySize: 256
    EphemeralStorage:
      Size: 512

Resources:
  ################################
  # S3 Bucket
  ################################
  MGS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: migration-tool-bucket-777

  ################################
  # StateMachine
  ################################
  MGS1StateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      Name: MigrationStateMachine
      DefinitionUri: ../statemachines/migration.asl.json
      DefinitionSubstitutions:
        MGS3BucketName: !Ref MGS3Bucket
        MGF1LambdaFunctionArn: !GetAtt MGF1LambdaFunction.Arn
        MGF2LambdaFunctionArn: !GetAtt MGF2LambdaFunction.Arn
      Policies:
        - LambdaInvokePolicy:
            FunctionName: !Ref MGF1LambdaFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref MGF2LambdaFunction
        - !Ref MGBasicIAMPolicyStateMachine
    DependsOn:
      - MGBasicIAMPolicyStateMachine

  ################################
  # Lambda
  ################################
  # get_settings function
  MGF1LambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../functions/get_settings/
      # Layers:
      #   - !Ref MyLayer
      Description: ''
      Role: !GetAtt MGBasicIAMRoleLambdaFunction.Arn
      FunctionName: migration_tool_001_get_settings
      LoggingConfig:
        LogFormat: Text
        LogGroup: /aws/lambda/migration_tool_001_get_settings

  # merge_data function
  MGF2LambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../functions/merge_data/
      # Layers:
      #   - !Ref MyLayer
      Description: ''
      Role: !GetAtt MGBasicIAMRoleLambdaFunction.Arn
      FunctionName: migration_tool_002_merge_data
      LoggingConfig:
        LogFormat: Text
        LogGroup: /aws/lambda/migration_tool_002_merge_data

  ################################
  # IAM
  ################################
  # Additional policy for statemachine
  MGBasicIAMPolicyStateMachine:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: MGBasicIAMPolicyStateMachine
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action: s3:*
            Effect: Allow
            Resource:
              - !Sub
                - arn:aws:s3:::${BucketName}
                - BucketName: !Ref MGS3Bucket
              - !Sub
                - arn:aws:s3:::${BucketName}/*
                - BucketName: !Ref MGS3Bucket

  # role for define_src_data function
  MGBasicIAMRoleLambdaFunction:
    UpdateReplacePolicy: Retain
    Type: AWS::IAM::Role
    DeletionPolicy: Delete
    Properties:
      Path: /service-role/
      ManagedPolicyArns:
        - !Ref MGBasicIAMManagedPolicyLambdaFunction
      MaxSessionDuration: 3600
      RoleName: MGBasicIAMRoleLambdaFunction
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
  MGBasicIAMManagedPolicyLambdaFunction:
    UpdateReplacePolicy: Retain
    Type: AWS::IAM::ManagedPolicy
    DeletionPolicy: Delete
    Properties:
      ManagedPolicyName: MGBasicIAMManagedPolicyLambdaFunction
      Path: /service-role/
      Description: ''
      Groups: []
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Resource: !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*
            Action: logs:CreateLogGroup
            Effect: Allow
          - Resource:
              - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/*:*
            Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
      Roles: []
      Users: []
